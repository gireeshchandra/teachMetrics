package com.adtFinalProject.teachMetrics.service;

import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.stereotype.Service;

import com.adtFinalProject.teachMetrics.model.AssessmentsModel;
import com.adtFinalProject.teachMetrics.model.ResponsesModel;
import com.adtFinalProject.teachMetrics.model.ResultsModel;
import com.adtFinalProject.teachMetrics.model.userModel;

@Service
public class AssessmentsServiceImpl implements AssessmentsService {

	@Autowired
    private MongoTemplate mongoTemplate;
	@Autowired
    private DataAccessBase dataAccessBase;
	
	public HashMap<String, Object> fetchAssessment() {
		HashMap<String, Object> response = new HashMap<String, Object>();
		//List<AssessmentsModel> am = new ArrayList<AssessmentsModel>();
		
		MongoTemplate mongoTemplate = dataAccessBase.createMongoTemplate();
		
		List<AssessmentsModel> am = mongoTemplate.findAll(AssessmentsModel.class);
		
		if(!am.isEmpty()) {
			response.put("assessmentsList", am);
			response.put("responseMessage", "Success");
			response.put("responseCode", 1000);
		} else {
			response.put("responseMessage", "Error");
			response.put("responseCode", 9999);
		}
		
		return response;
	}
	
	public HashMap<String, Object> submitAssessment(List<ResponsesModel> rm) {
		HashMap<String, Object> response = new HashMap<String, Object>();
		MongoTemplate mongoTemplate = dataAccessBase.createMongoTemplate();
		
		Query query = new Query(Criteria.where("emailId").is(rm.get(0).getEmailId()));
    	List<userModel> result = mongoTemplate.find(query, userModel.class);
		
    	if(!result.isEmpty()) {
    		for(int i = 0; i < rm.size(); i++) {
    			rm.get(i).setAccId(result.get(0).getAccId());
    		}
    	}
    	
    	mongoTemplate.insertAll(rm);
    	
    	Query aQuery = new Query(Criteria.where("accId").is(rm.get(0).getAccId()));
    	List<ResponsesModel> resResult = mongoTemplate.find(query, ResponsesModel.class);
    	
    	if(!resResult.isEmpty()) {
    		if(resResult.size() == rm.size()) {
    			long count = mongoTemplate.count(new Query(), AssessmentsModel.class);
    			
    			response.put("responseMessage", "Responses Saved Successfully");
    			response.put("responseCode", 1000);
    		} else {
    			response.put("responseMessage", "Error");
    			response.put("responseCode", 9999);
    		}
    	}	
    	
		return response;
	}
	
	int checkResult(List<ResponsesModel> responseList) {
		MongoTemplate mongoTemplate = dataAccessBase.createMongoTemplate();
		List<AssessmentsModel> keyList = mongoTemplate.findAll(AssessmentsModel.class);
		
		List<ResultsModel> rm;
		
		for(int i = 0; i < responseList.size(); i++) {
			for() {
				
			}
		}
		
		return 0;
	}
}
